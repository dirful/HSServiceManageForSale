<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.cqut.dao.systemFile.SystemFileDao">
 
    <insert id="save" parameterType="com.cqut.entity.systemFile.SystemFile">  
     <![CDATA[   
         insert into  systemFile ( fileID, createdTime, modifiedTime, fileSize, fileName, fileType, creator, filePath, remarks)
         values(#{fileID}, #{createdTime}, #{modifiedTime}, #{fileSize}, #{fileName}, #{fileType}, #{creator}, #{filePath}, #{remarks})	
     ]]>   
    </insert>
  
    
    <!--  mysql -->
    <insert id="saveEntities"> 
	 	 <![CDATA[  
	    	insert into systemFile ( fileID, createdTime, modifiedTime, fileSize, fileName, fileType, creator, filePath, remarks) VALUES 
	    ]]>  
	    <foreach collection="entities" item="item" index="index" separator=",">   
	         ( #{item.fileID}, #{item.createdTime}, #{item.modifiedTime}, #{item.fileSize}, #{item.fileName}, #{item.fileType}, #{item.creator}, #{item.filePath}, #{item.remarks})
	    </foreach> 
	</insert> 
	
	
	<update id="updateByID" >
		<![CDATA[  
			update systemFile set 	
      		createdTime = #{entity.createdTime},
      		modifiedTime = #{entity.modifiedTime},
      		fileSize = #{entity.fileSize},
      		fileName = #{entity.fileName},
      		fileType = #{entity.fileType},
      		creator = #{entity.creator},
      		filePath = #{entity.filePath},
      		remarks = #{entity.remarks}
      	]]>
      	<where>
      		fileID = #{id}
      	</where>  		
	</update>
		
		
	<update id="updateByCondition">
		<![CDATA[  
			update systemFile set 	
      		createdTime = #{entity.createdTime},
      		modifiedTime = #{entity.modifiedTime},
      		fileSize = #{entity.fileSize},
      		fileName = #{entity.fileName},
      		fileType = #{entity.fileType},
      		creator = #{entity.creator},
      		filePath = #{entity.filePath},
      		remarks = #{entity.remarks}
      	]]>
      	<where>
      		<if test="condition != null">
      			${condition}
      		</if>
      	</where>  		
	</update>	
	
	<update id="updatePropByID">
		<![CDATA[  
			update  systemFile set
		]]>
		<foreach collection="prop" item="item" index="index" separator=",">
          	${item.key} = #{item.value}
        </foreach>
        <where>
        	fileID = #{id}
        </where>
	</update>	
	
	<update id="updatePropByCondition">
		<![CDATA[  
			update  systemFile set
		]]>
		<foreach collection="prop" item="item" index="index" separator=",">
          	${item.key} = #{item.value}
        </foreach>
        <where>
        	<if test="condition != null">
        		${condition}
        	</if>
        </where>
	</update>	
	
   <delete id="deleteByID"  parameterType="string">
		<![CDATA[   
			delete from systemFile   
		]]>
		<where>
			fileID = #{ID}
		</where>
	</delete>	
	
	<delete id="deleteByCondition"  parameterType="string">
		<![CDATA[   
			delete from systemFile  
		]]>
		<where>
			<if test="condition != null">
				${condition}
			</if>	
		</where>	
	</delete>	
	
	<delete id="deleteEntities"  parameterType="string">
		<![CDATA[   
			delete from systemFile    
		]]>
		<where>
			 fileID in
			 <foreach collection="ids" item="item" index="index" separator="," open="(" close=")">
          		#{item}
        	</foreach>
		</where>	
	</delete>
	
	
	<select id="getByID" resultType="com.cqut.entity.systemFile.SystemFile">
		<![CDATA[   
			select * from systemFile 
		]]>
		<where>
			fileID = #{ID}
		</where>
	</select>
	
	<select id="getByCondition" resultType="com.cqut.entity.systemFile.SystemFile">
		<![CDATA[   
			select * from systemFile 
		]]>
		<where>
			<if test="condition != null">
		 		${condition}
		 	</if>
		</where>
	</select>
	
	<select id="findByID" resultType="map">
		select 
		<foreach collection="properties" item="item" index="index" separator=",">
          	${item}
        </foreach>
        from systemFile 
        <where>
        	fileID = #{id}
        </where>
	</select>	
	
	
	<select id="findByCondition" resultType="map">
		select 
		<foreach collection="properties" item="item" index="index" separator=",">
          	${item}
        </foreach>
        from systemFile 
        <where>
        	<if test="condition != null">
        		${condition}
        	</if>
        </where>
	</select>		
	
		
	<select id="getCountByCondition" resultType="int">
		select count(distinct fileID) from systemFile
		<where>
        	<if test="condition != null">
        		${condition}
        	</if>	
        </where>
	</select>	
</mapper>